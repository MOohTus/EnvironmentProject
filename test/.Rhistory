Bipartite_file_Drugs_disease <- file.path(inputDir, "Networks/bipartite/3_2.gr")
Bipartite_Drugs_disease_network <- readBipartite(bipartiteFileName = Bipartite_file_Drugs_disease)
## SELECT K TOP OF MOLECULES
## PROTEIN SCORE
proteinScore <- read.table(file = file.path(resultDir, "multiplex_1.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
proteinScoreFilt <- proteinScore$protein[c(1:k_prot)]
PPI_sub <- induced.subgraph(graph = PPI_network, vids = which(names(V(PPI_network)) %in% proteinScoreFilt))
Pathway_sub <- induced.subgraph(graph = Pathway_network, vids = which(names(V(Pathway_network)) %in% proteinScoreFilt))
Complexe_sub <- induced.subgraph(graph = Complexe_network, vids = which(names(V(Complexe_network)) %in% proteinScoreFilt))
## DISEASE SCORE
diseaseScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
diseaseScoreFilt <- diseaseScore$disease[c(1:k_disease)]
Disease_sub <- induced.subgraph(graph = Disease_network, vids = which(names(V(Disease_network)) %in% diseaseScoreFilt))
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$drug[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
## BIPARTITE
bipartiteFilt <- c(proteinScoreFilt, diseaseScoreFilt, drugScoreFilt)
Bipartite_Molecular_disease_sub <- induced.subgraph(graph = Bipartite_Molecular_disease_network, vids = which(names(V(Bipartite_Molecular_disease_network)) %in% bipartiteFilt))
Bipartite_Molecular_Drugs_sub <- induced.subgraph(graph = Bipartite_Molecular_Drugs_network, vids = which(names(V(Bipartite_Molecular_Drugs_network)) %in% bipartiteFilt))
Bipartite_Drugs_disease_sub <- induced.subgraph(graph = Bipartite_Drugs_disease_network, vids = which(names(V(Bipartite_Drugs_disease_network)) %in% bipartiteFilt))
## FILE FOR CYTOSCAPE
results_dt <- data.frame(get.edgelist(Bipartite_Molecular_disease_sub), "Source" = "Bipartite_Molecular_disease")
if(nrow(get.edgelist(Bipartite_Molecular_Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Molecular_Drugs_sub), "Source" = "Bipartite_Molecular_drug"))}
if(nrow(get.edgelist(Bipartite_Drugs_disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Drugs_disease_sub), "Source" = "Bipartite_drug_disease"))}
if(nrow(get.edgelist(Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Drugs_sub), "Source" = "Drug"))}
if(nrow(get.edgelist(Disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Disease_sub), "Source" = "Disease"))}
if(nrow(get.edgelist(Complexe_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Complexe_sub), "Source" = "Complexe"))}
if(nrow(get.edgelist(Pathway_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Pathway_sub), "Source" = "Pathway"))}
if(nrow(get.edgelist(PPI_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(PPI_sub), "Source" = "PPI"))}
names(results_dt) <- c("Node1", "Node2", "Source")
outputFileName <- paste0(resultDir, "/RWR_", outputName, ".csv")
write.table(x = results_dt, file = outputFileName, quote = FALSE, sep = ";", row.names = FALSE, col.names = TRUE)
return(outputFileName)
}
#--------------------------------------------------- TOP 10 ----
## GENERAL PARAMETERS
## PATH OF ANALYSIS
inputDir <- "/home/morgane/Documents/05_EJPR_RD/WF_Environment/EnvironmentProject/test/"
cytoscapeSessionName <- paste0(inputDir, "202203_RWRAnalysis/202203_RWR_analysis_top10.cys")
seedsFile <- paste0("/home/morgane/Documents/05_EJPR_RD/WF_Environment/EnvironmentProject/test/Networks/", "seeds.txt")
collection <- "2seeds"
## GO TO THIS DIRECTORY
setwd(dir = inputDir)
## ONLY 2 SEEDS : VITAMIN A + TRETINOIN
## CREATE A NETWORK FILE WHICH YOU CAN GIVE TO CYTOSCAPE
resultDir <- paste0(inputDir, "202203_RWRAnalysis/")
outputName <- "2Seeds_top10"
outputFileName <- multiXrank2CytoscapeFileCreation(inputDir = inputDir, resultDir = resultDir,
k_prot = 10, k_drug = 10, k_disease = 10,
outputName = outputName)
## READ AND CREATE NETWORK
## MOLECULAR MULTIPLEX - PPI
PPI_file <- file.path(inputDir, "Networks/multiplex/1/PPI_Jan2021.gr")
PPI_network <- createNetwork(networkFileName = PPI_file)
## MOLECULAR MULTIPLEX - PATH
Pathway_file <- file.path(inputDir, "Networks/multiplex/1/Reactome_Nov2020.gr")
Pathway_network <- createNetwork(networkFileName = Pathway_file)
## MOLECULAR MULTIPLEX - COMPL
Complexe_file <- file.path(inputDir, "Networks/multiplex/1/Complexes_Nov2020.gr")
Complexe_network <- createNetwork(networkFileName = Complexe_file)
## DISEASE MONOPLEX
Disease_file <- file.path(inputDir, "Networks/multiplex/2/disease_disease_final_Sept2020.gr")
Disease_network <- createNetwork(networkFileName = Disease_file)
## DRUG MONOPLEX
Drugs_file <- file.path(inputDir, "Networks/multiplex/3/drugbank-chem-chem.gr")
Drugs_network <- createNetwork(networkFileName = Drugs_file)
## READ BIPARTITE
## BIPARTITE - MOLECULAR / DISEASE
Bipartite_file_Molecular_disease <- file.path(inputDir, "Networks/bipartite/Bipartite_geneDiseases_Sept2020_filter0.2.gr")
Bipartite_Molecular_disease_network <- readBipartite(bipartiteFileName = Bipartite_file_Molecular_disease)
## BIPARTITE - MOLECULAR / DRUG
Bipartite_file_Molecular_Drugs <- file.path(inputDir, "Networks/bipartite/3_1.gr")
Bipartite_Molecular_Drugs_network <- readBipartite(bipartiteFileName = Bipartite_file_Molecular_Drugs)
## BIPARTITE - DRUG / DISEASE
Bipartite_file_Drugs_disease <- file.path(inputDir, "Networks/bipartite/3_2.gr")
Bipartite_Drugs_disease_network <- readBipartite(bipartiteFileName = Bipartite_file_Drugs_disease)
## SELECT K TOP OF MOLECULES
## PROTEIN SCORE
proteinScore <- read.table(file = file.path(resultDir, "multiplex_1.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
proteinScoreFilt <- proteinScore$protein[c(1:k_prot)]
PPI_sub <- induced.subgraph(graph = PPI_network, vids = which(names(V(PPI_network)) %in% proteinScoreFilt))
Pathway_sub <- induced.subgraph(graph = Pathway_network, vids = which(names(V(Pathway_network)) %in% proteinScoreFilt))
Complexe_sub <- induced.subgraph(graph = Complexe_network, vids = which(names(V(Complexe_network)) %in% proteinScoreFilt))
## DISEASE SCORE
diseaseScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
k_disease=10
diseaseScoreFilt <- diseaseScore$disease[c(1:k_disease)]
Disease_sub <- induced.subgraph(graph = Disease_network, vids = which(names(V(Disease_network)) %in% diseaseScoreFilt))
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
k_drug=10
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$drug[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
## BIPARTITE
bipartiteFilt <- c(proteinScoreFilt, diseaseScoreFilt, drugScoreFilt)
Bipartite_Molecular_disease_sub <- induced.subgraph(graph = Bipartite_Molecular_disease_network, vids = which(names(V(Bipartite_Molecular_disease_network)) %in% bipartiteFilt))
Bipartite_Molecular_Drugs_sub <- induced.subgraph(graph = Bipartite_Molecular_Drugs_network, vids = which(names(V(Bipartite_Molecular_Drugs_network)) %in% bipartiteFilt))
Bipartite_Drugs_disease_sub <- induced.subgraph(graph = Bipartite_Drugs_disease_network, vids = which(names(V(Bipartite_Drugs_disease_network)) %in% bipartiteFilt))
## FILE FOR CYTOSCAPE
results_dt <- data.frame(get.edgelist(Bipartite_Molecular_disease_sub), "Source" = "Bipartite_Molecular_disease")
Bipartite_Molecular_disease_sub
Bipartite_file_Molecular_disease
Bipartite_Molecular_disease_network
## BIPARTITE
bipartiteFilt <- c(proteinScoreFilt, diseaseScoreFilt, drugScoreFilt)
bipartiteFilt
proteinScoreFilt
## SELECT K TOP OF MOLECULES
## PROTEIN SCORE
proteinScore <- read.table(file = file.path(resultDir, "multiplex_1.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
proteinScoreFilt
proteinScore
head(proteinScore)
proteinScoreFilt <- proteinScore$node[c(1:k_prot)]
PPI_sub <- induced.subgraph(graph = PPI_network, vids = which(names(V(PPI_network)) %in% proteinScoreFilt))
Pathway_sub <- induced.subgraph(graph = Pathway_network, vids = which(names(V(Pathway_network)) %in% proteinScoreFilt))
Complexe_sub <- induced.subgraph(graph = Complexe_network, vids = which(names(V(Complexe_network)) %in% proteinScoreFilt))
proteinScoreFilt
PPI_sub
proteinScoreFilt
PPI_network
names(V(PPI_network)
)
proteinScoreFilt
names(V(PPI_network)) %in% proteinScoreFilt
table(names(V(PPI_network)) %in% proteinScoreFilt)
len(proteinScoreFilt)
length(proteinScoreFilt)
which(names(V(PPI_network)) %in% proteinScoreFilt)
PPI_sub <- induced.subgraph(graph = PPI_network, vids = which(names(V(PPI_network)) %in% proteinScoreFilt))
PPI_sub
V(PPI_sub)
Pathway_sub <- induced.subgraph(graph = Pathway_network, vids = which(names(V(Pathway_network)) %in% proteinScoreFilt))
Complexe_sub <- induced.subgraph(graph = Complexe_network, vids = which(names(V(Complexe_network)) %in% proteinScoreFilt))
Pathway_sub
## DISEASE SCORE
diseaseScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
diseaseScoreFilt
diseaseScore
head(diseaseScore)
## SELECT K TOP OF MOLECULES
## PROTEIN SCORE
proteinScore <- read.table(file = file.path(resultDir, "multiplex_1.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
proteinScoreFilt <- proteinScore$node[c(1:k_prot)]
PPI_sub <- induced.subgraph(graph = PPI_network, vids = which(names(V(PPI_network)) %in% proteinScoreFilt))
Pathway_sub <- induced.subgraph(graph = Pathway_network, vids = which(names(V(Pathway_network)) %in% proteinScoreFilt))
Complexe_sub <- induced.subgraph(graph = Complexe_network, vids = which(names(V(Complexe_network)) %in% proteinScoreFilt))
## DISEASE SCORE
diseaseScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
diseaseScoreFilt <- diseaseScore$node[c(1:k_disease)]
Disease_sub <- induced.subgraph(graph = Disease_network, vids = which(names(V(Disease_network)) %in% diseaseScoreFilt))
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$node[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
## BIPARTITE
bipartiteFilt <- c(proteinScoreFilt, diseaseScoreFilt, drugScoreFilt)
Bipartite_Molecular_disease_sub <- induced.subgraph(graph = Bipartite_Molecular_disease_network, vids = which(names(V(Bipartite_Molecular_disease_network)) %in% bipartiteFilt))
Bipartite_Molecular_Drugs_sub <- induced.subgraph(graph = Bipartite_Molecular_Drugs_network, vids = which(names(V(Bipartite_Molecular_Drugs_network)) %in% bipartiteFilt))
Bipartite_Drugs_disease_sub <- induced.subgraph(graph = Bipartite_Drugs_disease_network, vids = which(names(V(Bipartite_Drugs_disease_network)) %in% bipartiteFilt))
## FILE FOR CYTOSCAPE
results_dt <- data.frame(get.edgelist(Bipartite_Molecular_disease_sub), "Source" = "Bipartite_Molecular_disease")
results_dt
if(nrow(get.edgelist(Bipartite_Molecular_Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Molecular_Drugs_sub), "Source" = "Bipartite_Molecular_drug"))}
if(nrow(get.edgelist(Bipartite_Drugs_disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Drugs_disease_sub), "Source" = "Bipartite_drug_disease"))}
if(nrow(get.edgelist(Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Drugs_sub), "Source" = "Drug"))}
if(nrow(get.edgelist(Disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Disease_sub), "Source" = "Disease"))}
if(nrow(get.edgelist(Complexe_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Complexe_sub), "Source" = "Complexe"))}
if(nrow(get.edgelist(Pathway_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Pathway_sub), "Source" = "Pathway"))}
if(nrow(get.edgelist(PPI_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(PPI_sub), "Source" = "PPI"))}
names(results_dt) <- c("Node1", "Node2", "Source")
outputFileName <- paste0(resultDir, "/RWR_", outputName, ".csv")
## INPUT :
##    - inputDir : [STRING] directory path
##    - resultDir : [STRING] directory where you want results will be saved
##    - k_prot : [INT] top of protein to extract
##    - k_drug : [INT] top of drug to extract
##    - k_disease : [INT] top of disease to extract
##    - outputName : results file name
## OUTPUT :
##    - outputFileName :
#---------------------------------------------------------------
multiXrank2CytoscapeFileCreation <- function(inputDir, resultDir, k_prot, k_drug, k_disease, outputName){
## READ AND CREATE NETWORK
## MOLECULAR MULTIPLEX - PPI
PPI_file <- file.path(inputDir, "Networks/multiplex/1/PPI_Jan2021.gr")
PPI_network <- createNetwork(networkFileName = PPI_file)
## MOLECULAR MULTIPLEX - PATH
Pathway_file <- file.path(inputDir, "Networks/multiplex/1/Reactome_Nov2020.gr")
Pathway_network <- createNetwork(networkFileName = Pathway_file)
## MOLECULAR MULTIPLEX - COMPL
Complexe_file <- file.path(inputDir, "Networks/multiplex/1/Complexes_Nov2020.gr")
Complexe_network <- createNetwork(networkFileName = Complexe_file)
## DISEASE MONOPLEX
Disease_file <- file.path(inputDir, "Networks/multiplex/2/disease_disease_final_Sept2020.gr")
Disease_network <- createNetwork(networkFileName = Disease_file)
## DRUG MONOPLEX
Drugs_file <- file.path(inputDir, "Networks/multiplex/3/drugbank-chem-chem.gr")
Drugs_network <- createNetwork(networkFileName = Drugs_file)
## READ BIPARTITE
## BIPARTITE - MOLECULAR / DISEASE
Bipartite_file_Molecular_disease <- file.path(inputDir, "Networks/bipartite/Bipartite_geneDiseases_Sept2020_filter0.2.gr")
Bipartite_Molecular_disease_network <- readBipartite(bipartiteFileName = Bipartite_file_Molecular_disease)
## BIPARTITE - MOLECULAR / DRUG
Bipartite_file_Molecular_Drugs <- file.path(inputDir, "Networks/bipartite/3_1.gr")
Bipartite_Molecular_Drugs_network <- readBipartite(bipartiteFileName = Bipartite_file_Molecular_Drugs)
## BIPARTITE - DRUG / DISEASE
Bipartite_file_Drugs_disease <- file.path(inputDir, "Networks/bipartite/3_2.gr")
Bipartite_Drugs_disease_network <- readBipartite(bipartiteFileName = Bipartite_file_Drugs_disease)
## SELECT K TOP OF MOLECULES
## PROTEIN SCORE
proteinScore <- read.table(file = file.path(resultDir, "multiplex_1.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
proteinScoreFilt <- proteinScore$node[c(1:k_prot)]
PPI_sub <- induced.subgraph(graph = PPI_network, vids = which(names(V(PPI_network)) %in% proteinScoreFilt))
Pathway_sub <- induced.subgraph(graph = Pathway_network, vids = which(names(V(Pathway_network)) %in% proteinScoreFilt))
Complexe_sub <- induced.subgraph(graph = Complexe_network, vids = which(names(V(Complexe_network)) %in% proteinScoreFilt))
## DISEASE SCORE
diseaseScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
diseaseScoreFilt <- diseaseScore$node[c(1:k_disease)]
Disease_sub <- induced.subgraph(graph = Disease_network, vids = which(names(V(Disease_network)) %in% diseaseScoreFilt))
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$node[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
## BIPARTITE
bipartiteFilt <- c(proteinScoreFilt, diseaseScoreFilt, drugScoreFilt)
Bipartite_Molecular_disease_sub <- induced.subgraph(graph = Bipartite_Molecular_disease_network, vids = which(names(V(Bipartite_Molecular_disease_network)) %in% bipartiteFilt))
Bipartite_Molecular_Drugs_sub <- induced.subgraph(graph = Bipartite_Molecular_Drugs_network, vids = which(names(V(Bipartite_Molecular_Drugs_network)) %in% bipartiteFilt))
Bipartite_Drugs_disease_sub <- induced.subgraph(graph = Bipartite_Drugs_disease_network, vids = which(names(V(Bipartite_Drugs_disease_network)) %in% bipartiteFilt))
## FILE FOR CYTOSCAPE
results_dt <- data.frame(get.edgelist(Bipartite_Molecular_disease_sub), "Source" = "Bipartite_Molecular_disease")
if(nrow(get.edgelist(Bipartite_Molecular_Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Molecular_Drugs_sub), "Source" = "Bipartite_Molecular_drug"))}
if(nrow(get.edgelist(Bipartite_Drugs_disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Drugs_disease_sub), "Source" = "Bipartite_drug_disease"))}
if(nrow(get.edgelist(Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Drugs_sub), "Source" = "Drug"))}
if(nrow(get.edgelist(Disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Disease_sub), "Source" = "Disease"))}
if(nrow(get.edgelist(Complexe_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Complexe_sub), "Source" = "Complexe"))}
if(nrow(get.edgelist(Pathway_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Pathway_sub), "Source" = "Pathway"))}
if(nrow(get.edgelist(PPI_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(PPI_sub), "Source" = "PPI"))}
names(results_dt) <- c("Node1", "Node2", "Source")
outputFileName <- paste0(resultDir, "/RWR_", outputName, ".csv")
write.table(x = results_dt, file = outputFileName, quote = FALSE, sep = ";", row.names = FALSE, col.names = TRUE)
return(outputFileName)
}
outputFileName <- multiXrank2CytoscapeFileCreation(inputDir = inputDir, resultDir = resultDir,
k_prot = 10, k_drug = 10, k_disease = 10,
outputName = outputName)
resultDir
## CREATE TABLE FILE FOR CYTOSCAPE (USING BASH SCRIPT)
tableFile <- paste0(resultDir, "RWR_analysis_2Seeds_top10_4Cytoscape.table")
##    - networkFile : network file name (with 3 columns : node1;node2;interactionType) - Seperated with ";"
##    - tableFile : table file name (with 3 columns : nodeNames;Type;Label) - Separeted with ";"
##    - networkName : name of the network that you want to create
##    - seedsFile : file name (with 1 unnamed column : list of seeds used for analysis)
## OUTPUT :
##    - NONE
##    - create or open cytoscape session
##    - create a network visualization and custom it
##    - save the results into cytoscape file
#---------------------------------------------------------------
createNetworkOnCytoscape <- function(cytoscapeSessionName, networkFile, tableFile, networkName, seedsFile, collection){
## CONNEXION WITH CYTOSCAPE
cytoscapePing()
closeSession(save.before.closing = FALSE)
## OPEN SESSION
openSession(file.location = cytoscapeSessionName)
## CREATE NETWORK VISUALIZATION
Network <- read.table(file = networkFile, header = TRUE, sep = ";", stringsAsFactors = FALSE)
colnames(Network) <- c("source", "target", "interaction")
Nodes <- data.frame(id = unique(c(Network$source, Network$target)))
createNetworkFromDataFrames(Nodes, Network, title = outputName, collection = collection)
## LOAD DATA FROM TABLE
table <- read.table(file = tableFile, head = TRUE, sep = "\t", stringsAsFactors = FALSE)
loadTableData(data = table, data.key.column = "NodeNames", table = "node", table.key.column = "name")
## SELECT SEEDS (PRESENT IN THE RESULTS)
seeds <- read.table(file = seedsFile, head = FALSE, stringsAsFactors = FALSE)
seedsInNetwork <- seeds[seeds$V1 %in% Nodes$id,]
# SET SHAPE OF NODES
getTableColumnNames(table = "node")
setNodeShapeMapping(table.column = "Type",
table.column.values = c("Protein", "Drug", "Disease"),
shapes = c("ROUND_RECTANGLE", "TRIANGLE", "ELLIPSE"))
## SET COLOR OF NODES
setNodeColorMapping(table.column = "Type",
table.column.values =  c("Protein", "Drug", "Disease"),
colors = c("#FFCCCC", "#00CC33", "#CCCCCC"),
mapping.type = "discrete")
setNodeColorBypass(node.names = seedsInNetwork, new.colors = "#FF0CDC")
## SET COLOR OF EDGES
getTableColumnNames(table = "edge")
setEdgeColorMapping(table.column = "interaction",
# table.column.values = unique(Network$interaction),
table.column.values = c("Bipartite_drug_disease", "Bipartite_Molecular_disease", "Bipartite_Molecular_drug", "Complexe", "Disease", "Drug", "Pathway", "PPI"),
colors = c("#CCCCCC", "#CCCCCC", "#CCCCCC", "#33CC00", "#000000", "#CC00CC", "#00FFFF", "#F6DF00"),
mapping.type = "discrete")
## SET LABEL
setNodeLabelMapping(table.column = "Label")
## SAVE SESSION
saveSession(filename = cytoscapeSessionName)
}
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
cytoscapeSessionName
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
## CONNEXION WITH CYTOSCAPE
cytoscapePing()
closeSession(save.before.closing = FALSE)
## OPEN SESSION
openSession(file.location = cytoscapeSessionName)
## CREATE NETWORK VISUALIZATION
Network <- read.table(file = networkFile, header = TRUE, sep = ";", stringsAsFactors = FALSE)
networkFile = outputFileName
tableFile = tableFile
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
## LOAD DATA FROM TABLE
table <- read.table(file = tableFile, head = TRUE, sep = "\t", stringsAsFactors = FALSE)
tableFile
## CREATE TABLE FILE FOR CYTOSCAPE (USING BASH SCRIPT)
tableFile <- paste0(resultDir, "RWR_2Seeds_top10_4Cytoscape.table")
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$node[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
Drugs_sub
drugScoreFilt
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_3.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$node[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
## INPUT :
##    - inputDir : [STRING] directory path
##    - resultDir : [STRING] directory where you want results will be saved
##    - k_prot : [INT] top of protein to extract
##    - k_drug : [INT] top of drug to extract
##    - k_disease : [INT] top of disease to extract
##    - outputName : results file name
## OUTPUT :
##    - outputFileName :
#---------------------------------------------------------------
multiXrank2CytoscapeFileCreation <- function(inputDir, resultDir, k_prot, k_drug, k_disease, outputName){
## READ AND CREATE NETWORK
## MOLECULAR MULTIPLEX - PPI
PPI_file <- file.path(inputDir, "Networks/multiplex/1/PPI_Jan2021.gr")
PPI_network <- createNetwork(networkFileName = PPI_file)
## MOLECULAR MULTIPLEX - PATH
Pathway_file <- file.path(inputDir, "Networks/multiplex/1/Reactome_Nov2020.gr")
Pathway_network <- createNetwork(networkFileName = Pathway_file)
## MOLECULAR MULTIPLEX - COMPL
Complexe_file <- file.path(inputDir, "Networks/multiplex/1/Complexes_Nov2020.gr")
Complexe_network <- createNetwork(networkFileName = Complexe_file)
## DISEASE MONOPLEX
Disease_file <- file.path(inputDir, "Networks/multiplex/2/disease_disease_final_Sept2020.gr")
Disease_network <- createNetwork(networkFileName = Disease_file)
## DRUG MONOPLEX
Drugs_file <- file.path(inputDir, "Networks/multiplex/3/drugbank-chem-chem.gr")
Drugs_network <- createNetwork(networkFileName = Drugs_file)
## READ BIPARTITE
## BIPARTITE - MOLECULAR / DISEASE
Bipartite_file_Molecular_disease <- file.path(inputDir, "Networks/bipartite/Bipartite_geneDiseases_Sept2020_filter0.2.gr")
Bipartite_Molecular_disease_network <- readBipartite(bipartiteFileName = Bipartite_file_Molecular_disease)
## BIPARTITE - MOLECULAR / DRUG
Bipartite_file_Molecular_Drugs <- file.path(inputDir, "Networks/bipartite/3_1.gr")
Bipartite_Molecular_Drugs_network <- readBipartite(bipartiteFileName = Bipartite_file_Molecular_Drugs)
## BIPARTITE - DRUG / DISEASE
Bipartite_file_Drugs_disease <- file.path(inputDir, "Networks/bipartite/3_2.gr")
Bipartite_Drugs_disease_network <- readBipartite(bipartiteFileName = Bipartite_file_Drugs_disease)
## SELECT K TOP OF MOLECULES
## PROTEIN SCORE
proteinScore <- read.table(file = file.path(resultDir, "multiplex_1.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
proteinScoreFilt <- proteinScore$node[c(1:k_prot)]
PPI_sub <- induced.subgraph(graph = PPI_network, vids = which(names(V(PPI_network)) %in% proteinScoreFilt))
Pathway_sub <- induced.subgraph(graph = Pathway_network, vids = which(names(V(Pathway_network)) %in% proteinScoreFilt))
Complexe_sub <- induced.subgraph(graph = Complexe_network, vids = which(names(V(Complexe_network)) %in% proteinScoreFilt))
## DISEASE SCORE
diseaseScore <- read.table(file = file.path(resultDir, "multiplex_2.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
diseaseScoreFilt <- diseaseScore$node[c(1:k_disease)]
Disease_sub <- induced.subgraph(graph = Disease_network, vids = which(names(V(Disease_network)) %in% diseaseScoreFilt))
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_3.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$node[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
## BIPARTITE
bipartiteFilt <- c(proteinScoreFilt, diseaseScoreFilt, drugScoreFilt)
Bipartite_Molecular_disease_sub <- induced.subgraph(graph = Bipartite_Molecular_disease_network, vids = which(names(V(Bipartite_Molecular_disease_network)) %in% bipartiteFilt))
Bipartite_Molecular_Drugs_sub <- induced.subgraph(graph = Bipartite_Molecular_Drugs_network, vids = which(names(V(Bipartite_Molecular_Drugs_network)) %in% bipartiteFilt))
Bipartite_Drugs_disease_sub <- induced.subgraph(graph = Bipartite_Drugs_disease_network, vids = which(names(V(Bipartite_Drugs_disease_network)) %in% bipartiteFilt))
## FILE FOR CYTOSCAPE
results_dt <- data.frame(get.edgelist(Bipartite_Molecular_disease_sub), "Source" = "Bipartite_Molecular_disease")
if(nrow(get.edgelist(Bipartite_Molecular_Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Molecular_Drugs_sub), "Source" = "Bipartite_Molecular_drug"))}
if(nrow(get.edgelist(Bipartite_Drugs_disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Drugs_disease_sub), "Source" = "Bipartite_drug_disease"))}
if(nrow(get.edgelist(Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Drugs_sub), "Source" = "Drug"))}
if(nrow(get.edgelist(Disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Disease_sub), "Source" = "Disease"))}
if(nrow(get.edgelist(Complexe_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Complexe_sub), "Source" = "Complexe"))}
if(nrow(get.edgelist(Pathway_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Pathway_sub), "Source" = "Pathway"))}
if(nrow(get.edgelist(PPI_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(PPI_sub), "Source" = "PPI"))}
names(results_dt) <- c("Node1", "Node2", "Source")
outputFileName <- paste0(resultDir, "/RWR_", outputName, ".csv")
write.table(x = results_dt, file = outputFileName, quote = FALSE, sep = ";", row.names = FALSE, col.names = TRUE)
return(outputFileName)
}
## CREATE TABLE FILE FOR CYTOSCAPE (USING BASH SCRIPT)
tableFile <- paste0(resultDir, "RWR_2Seeds_top10_4Cytoscape.table")
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
## DRUG SCORE
drugScore <- read.table(file = file.path(resultDir, "multiplex_3.tsv"), sep = "\t", head = TRUE, stringsAsFactors = FALSE)
drugScoreFilt <- drugScore$node[c(1:k_drug)]
Drugs_sub <- induced.subgraph(graph = Drugs_network, vids = which(names(V(Drugs_network)) %in% drugScoreFilt))
Drugs_sub
## BIPARTITE
bipartiteFilt <- c(proteinScoreFilt, diseaseScoreFilt, drugScoreFilt)
Bipartite_Molecular_disease_sub <- induced.subgraph(graph = Bipartite_Molecular_disease_network, vids = which(names(V(Bipartite_Molecular_disease_network)) %in% bipartiteFilt))
Bipartite_Molecular_Drugs_sub <- induced.subgraph(graph = Bipartite_Molecular_Drugs_network, vids = which(names(V(Bipartite_Molecular_Drugs_network)) %in% bipartiteFilt))
Bipartite_Drugs_disease_sub <- induced.subgraph(graph = Bipartite_Drugs_disease_network, vids = which(names(V(Bipartite_Drugs_disease_network)) %in% bipartiteFilt))
Bipartite_Drugs_disease_sub
## FILE FOR CYTOSCAPE
results_dt <- data.frame(get.edgelist(Bipartite_Molecular_disease_sub), "Source" = "Bipartite_Molecular_disease")
if(nrow(get.edgelist(Bipartite_Molecular_Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Molecular_Drugs_sub), "Source" = "Bipartite_Molecular_drug"))}
if(nrow(get.edgelist(Bipartite_Drugs_disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Bipartite_Drugs_disease_sub), "Source" = "Bipartite_drug_disease"))}
if(nrow(get.edgelist(Drugs_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Drugs_sub), "Source" = "Drug"))}
if(nrow(get.edgelist(Disease_sub)) > 0){results_dt <- rbind(results_dt, data.frame(get.edgelist(Disease_sub), "Source" = "Disease"))}
#--------------------------------------------------- TOP 10 ----
## GENERAL PARAMETERS
## PATH OF ANALYSIS
inputDir <- "/home/morgane/Documents/05_EJPR_RD/WF_Environment/EnvironmentProject/test/"
cytoscapeSessionName <- paste0(inputDir, "202203_RWRAnalysis/202203_RWR_analysis_top10.cys")
seedsFile <- paste0("/home/morgane/Documents/05_EJPR_RD/WF_Environment/EnvironmentProject/test/Networks/", "seeds.txt")
collection <- "2seeds"
## GO TO THIS DIRECTORY
setwd(dir = inputDir)
## ONLY 2 SEEDS : VITAMIN A + TRETINOIN
## CREATE A NETWORK FILE WHICH YOU CAN GIVE TO CYTOSCAPE
resultDir <- paste0(inputDir, "202203_RWRAnalysis/")
outputName <- "2Seeds_top10"
outputFileName <- multiXrank2CytoscapeFileCreation(inputDir = inputDir, resultDir = resultDir,
k_prot = 10, k_drug = 10, k_disease = 10,
outputName = outputName)
## CREATE TABLE FILE FOR CYTOSCAPE (USING BASH SCRIPT)
tableFile <- paste0(resultDir, "RWR_2Seeds_top10_4Cytoscape.table")
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
#--------------------------------------------------- TOP 10 ----
## GENERAL PARAMETERS
## PATH OF ANALYSIS
inputDir <- "/home/morgane/Documents/05_EJPR_RD/WF_Environment/EnvironmentProject/test/"
cytoscapeSessionName <- paste0(inputDir, "202203_RWRAnalysis/202203_RWR_analysis_top10.cys")
seedsFile <- paste0("/home/morgane/Documents/05_EJPR_RD/WF_Environment/EnvironmentProject/test/Networks/", "seeds.txt")
collection <- "2seeds"
## GO TO THIS DIRECTORY
setwd(dir = inputDir)
## ONLY 2 SEEDS : VITAMIN A + TRETINOIN
## CREATE A NETWORK FILE WHICH YOU CAN GIVE TO CYTOSCAPE
resultDir <- paste0(inputDir, "202203_RWRAnalysis/")
outputName <- "2Seeds_top10"
outputFileName <- multiXrank2CytoscapeFileCreation(inputDir = inputDir, resultDir = resultDir,
k_prot = 10, k_drug = 10, k_disease = 10,
outputName = outputName)
## CREATE TABLE FILE FOR CYTOSCAPE (USING BASH SCRIPT)
tableFile <- paste0(resultDir, "RWR_2Seeds_top10_4Cytoscape.table")
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
## CREATE TABLE FILE FOR CYTOSCAPE (USING BASH SCRIPT)
tableFile <- paste0(resultDir, "RWR_2Seeds_top10_4Cytoscape.table")
## CREATE CYTOSCAPE VIEW
createNetworkOnCytoscape(cytoscapeSessionName = cytoscapeSessionName,
networkFile = outputFileName,
tableFile = tableFile,
networkName = outputName,
seedsFile = seedsFile,
collection = collection)
